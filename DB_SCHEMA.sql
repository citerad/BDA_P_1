
PRAGMA foreign_keys = ON;

-- -----------------------------------------------------
-- `CATEGORIA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CATEGORIA`;
CREATE TABLE IF NOT EXISTS `CATEGORIA` (
  `ID` INTEGER PRIMARY KEY AUTOINCREMENT,
  `NOMBRE` VARCHAR(45) NULL);

-- -----------------------------------------------------
-- `ESPECTACULO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ESPECTACULO`;
CREATE TABLE IF NOT EXISTS `ESPECTACULO` (
  `ID` INTEGER PRIMARY KEY AUTOINCREMENT,
  `TITULO` VARCHAR(256) NULL,
  `DESCRIPCION` TEXT NULL,
  `CATEGORIA_ID` INT NOT NULL,
  FOREIGN KEY (`CATEGORIA_ID`) REFERENCES `CATEGORIA` (`ID`));

-- -----------------------------------------------------
-- `ESPACIO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ESPACIO`;
CREATE TABLE IF NOT EXISTS `ESPACIO` (
  `ID` INTEGER PRIMARY KEY AUTOINCREMENT,
  `NOMBRE` VARCHAR(128) NULL,
  `AFORO` INT NULL,
  `TELEFONO` VARCHAR(45) NULL,
  `DIRECCION` VARCHAR(256) NULL,
  `EMAIL` VARCHAR(256) NULL,
  `LONGITUD` FLOAT NULL,
  `LATITUD` FLOAT NULL);


-- -----------------------------------------------------
-- `SESION`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SESION`;
CREATE TABLE IF NOT EXISTS `SESION` (
  `ID` INTEGER PRIMARY KEY AUTOINCREMENT,
  `FECHA_INICIO` TIMESTAMP NULL,
  `FECHA_FINALIZACION` TIMESTAMP NULL,
  `PRECIO` INT NULL,
  `ENTRADAS_VENDIDAS` INT NULL,
  `ESPECTACULO_ID` INT NOT NULL,
  `ESPACIO_ID` INT NOT NULL,
  CONSTRAINT `fk_SESION_ESPECTACULO1`
    FOREIGN KEY (`ESPECTACULO_ID`)
    REFERENCES `ESPECTACULO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_SESION_ESPACIO1`
    FOREIGN KEY (`ESPACIO_ID`)
    REFERENCES `ESPACIO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- `USUARIO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `USUARIO`;
CREATE TABLE IF NOT EXISTS `USUARIO` (
  `ID` INTEGER PRIMARY KEY AUTOINCREMENT,
  `LOGIN` VARCHAR(64) NULL,
  `PASSWORD` TEXT NULL,
  `NOMBRE` VARCHAR(128) NULL,
  `FECHA_ALTA` TIMESTAMP NULL,
  `FECHA_ULTIMA_COMPRA` TIMESTAMP NULL,
  `TIPO_USUARIO` VARCHAR(64) NULL);


-- -----------------------------------------------------
-- `ENTRADA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ENTRADA`;
CREATE TABLE IF NOT EXISTS `ENTRADA` (
  `ID` INTEGER PRIMARY KEY AUTOINCREMENT,
  `PRECIO` INT NULL,
  `FILA` INT NULL,
  `ASIENTO` INT NULL,
  `SESION_ID` INT NOT NULL,
  `USUARIO_ID` INT NOT NULL,
  CONSTRAINT `fk_ENTRADA_SESION1`
    FOREIGN KEY (`SESION_ID`)
    REFERENCES `SESION` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ENTRADA_USUARIO1`
    FOREIGN KEY (`USUARIO_ID`)
    REFERENCES `USUARIO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE TRIGGER `ACTUALIZAR_ULTIMA_COMPRA` AFTER INSERT ON `ENTRADA`
  BEGIN
    UPDATE `USUARIO` SET `FECHA_ULTIMA_COMPRA` = ( strftime('%s', 'now') || '000' ) WHERE `ID` = NEW.`USUARIO_ID`;
  END;

CREATE TRIGGER `INCREMENTAR_ENTRADAS_VENDIDAS` AFTER INSERT ON `ENTRADA`
  BEGIN
    UPDATE `SESION` SET `ENTRADAS_VENDIDAS` = `ENTRADAS_VENDIDAS` + 1 WHERE `ID` = NEW.`SESION_ID`;
  END;

CREATE TRIGGER `DECREMENTAR_ENTRADAS_VENDIDAS` AFTER DELETE ON `ENTRADA`
  BEGIN
    UPDATE `SESION` SET `ENTRADAS_VENDIDAS` = `ENTRADAS_VENDIDAS` - 1 WHERE `ID` = OLD.`SESION_ID`;
  END;
